package view;

import model.IAnimationModel;
import view.listeners.PausePlayListener;
import view.listeners.RestartListener;

/**
 * This class represents a view factory that creates the view that should be generated by choosing
 * the various view based on a string representation of a model.
 */
public class ViewFactory {

  /**
   * This method implements the view factory to generate the view.
   *
   * @param viewType is a string for the  view
   * @param model    animation model passed in
   * @throws IllegalArgumentException if the view is invalid.
   */
  public IView viewFactoryImpl(String viewType, IAnimationModel model)
          throws IllegalArgumentException {
    switch (viewType.toLowerCase()) {
      case "visual":
        VisualView visual;
        visual = new VisualView();
        visual.getPanel().setModel(model);
        return visual;
      case "text":
        TextView text;
        text = new TextView();
        return text;
      case "interactive":
        InteractiveView interactive;
        interactive = new InteractiveView();
        interactive.getPanel().setModel(model);
        interactive.getPlay().addActionListener(new PausePlayListener(interactive));
        interactive.getRestart().addActionListener(new RestartListener(interactive));
        return interactive;
      default:
        throw new IllegalArgumentException(viewType + "is not supported by the specifications "
                + "of this project.");
    }
  }


}
